rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuth() {
      return request.auth != null;
    }

    function isAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/Users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/Users/$(request.auth.uid)).data.admin == true;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function hasValidOrder(productId, orderId) {
      let order = get(/databases/$(database)/documents/Orders/$(orderId));
      return order != null &&
             order.data.userId == request.auth.uid &&
             order.data.trackingStatus == 'DELIVERED';
    }

    // User rules
    match /Users/{userId} {
      allow read: if true;
      allow create: if isAuth();
      allow update: if isAuth() && (isOwner(userId) || isAdmin());
      allow delete: if isAdmin();
    }
    
    // Product rules
    match /Productos/{productId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    // Comments rules
    match /comentarios/{commentId} {
      allow read: if true;
      allow create: if isAuth();
      allow update: if false;
      allow delete: if isAuth() && (
        isOwner(resource.data.userId) || 
        isAdmin()
      );
    }

    // Category rules
    match /Categorias/{categoryId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Cart rules
    match /Carts/{userId} {
      allow read, write: if isAuth() && isOwner(userId);
    }

    // Order rules
    match /Orders/{orderId} {
      allow read: if isAuth() && (
        resource.data.userId == request.auth.uid || 
        isAdmin()
      );
      allow create: if isAuth();
      allow update: if isAuth() && (
        isAdmin() || 
        isOwner(resource.data.userId)
      );
      allow delete: if isAdmin();
    }

    // PayU Transaction rules
    match /PayuTransactions/{transactionId} {
      allow read: if isAuth() && (
        resource.data.userId == request.auth.uid || 
        isAdmin()
      );
      allow create: if isAuth();
      allow update: if isAdmin();
      allow delete: if false;
    }

    // Tracking rules
    match /tracking/{trackingId} {
      allow read: if isAuth();
      allow write: if isAdmin();
    }

    // Favorites rules
    match /favorites/{favoriteId} {
      allow read: if true;
      allow create, delete: if request.auth != null && 
        favoriteId.matches(request.auth.uid + '_.*');
    }

    // Discount codes rules - Add this new section
    match /Codigos/{codeId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
  }
}