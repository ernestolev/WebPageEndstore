rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/Users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/Users/$(request.auth.uid)).data.admin == true;
    }

    match /Users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.uid == userId || 
         resource == null || 
         request.resource.data.email == resource.data.email);
    }
    
    match /Productos/{productId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    // Add this new rule for Categories
    match /Categorias/{categoryId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

     match /Carts/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

     match /Orders/{orderId} {
      allow read: if request.auth != null && 
        (resource == null || resource.data.userId == request.auth.uid);
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }

    match /databases/{database}/documents {
    match /Users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
  }
}